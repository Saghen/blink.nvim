--- @class blink.cmp.CompletionTriggerContext
--- @field kind number
--- @field character string | nil
---
--- @class blink.cmp.CompletionContext : blink.cmp.TriggerContext
--- @field trigger blink.cmp.CompletionTriggerContext | nil
---
--- @class blink.cmp.CompletionResponse
--- @field is_incomplete_forward boolean
--- @field is_incomplete_backward boolean
--- @field items blink.cmp.CompletionItem[]
---
--- @class blink.cmp.Source
--- @field new fun(opts: table): blink.cmp.Source
--- @field get_trigger_characters (fun(self: blink.cmp.Source): string[]) | nil
--- @field get_completions fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, callback: fun(response: blink.cmp.CompletionResponse)): (fun(): nil)
--- @field filter_completions (fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, source_responses: table<string, blink.cmp.CompletionResponse>): blink.cmp.CompletionItem[]) | nil
--- @field should_show_completions (fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, source_responses: table<string, blink.cmp.CompletionResponse>): boolean) | nil
--- @field resolve (fun(self: blink.cmp.Source, item: blink.cmp.CompletionItem, callback: fun(resolved_item: lsp.CompletionItem | nil)): ((fun(): nil) | nil)) | nil
---
--- @class blink.cmp.SourceProvider
--- @field module blink.cmp.Source
--- @field config blink.cmp.SourceProviderConfig
--- @field completions_task blink.cmp.Task | nil
--- @field completions_task_context_id number | nil
--- @field new fun(config: blink.cmp.SourceProviderConfig): blink.cmp.SourceProvider
--- @field get_trigger_characters (fun(self: blink.cmp.Source): string[]) | nil
--- @field request_completions fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, callback: fun(response: blink.cmp.CompletionResponse)): nil
--- @field filter_completions (fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, source_responses: table<string, blink.cmp.CompletionResponse>): blink.cmp.CompletionItem[]) | nil
--- @field should_show_completions (fun(self: blink.cmp.Source, context: blink.cmp.CompletionContext, source_responses: table<string, blink.cmp.CompletionResponse>): boolean) | nil
--- @field resolve fun(self: blink.cmp.Source, item: blink.cmp.CompletionItem, callback: fun(resolved_item: lsp.CompletionItem | nil)): blink.cmp.Task
